import { HttpService } from '@nestjs/axios';
export declare class TrakcareService {
    private readonly httpService;
    constructor(httpService: HttpService);
    getPatientInfoByPID(xPID: string): Promise<any>;
    getPatientInfoByHN(xHN: string): Promise<any>;
    getPatientInfoByPassportNumber(xPassportnumber: string): Promise<any>;
    getEpisodeByHN(xHN: string, xEpiDate: string, xEpiType: string): Promise<any>;
    getEpisodeInfoByVN(xVN: string): Promise<any>;
    getOPDDischargeVisit(xVN: string): Promise<any>;
    getOPDDischargeDiagnosis(xVN: string): Promise<any>;
    getOPDDischargeDoctor(xVN: string): Promise<any>;
    getOPDDischargeProcedure(xVN: string): Promise<any>;
    getOPDDischargeInvestigation(xVN: string): Promise<any>;
    getOPDDischargeVitalSign(xVN: string): Promise<any>;
    getOPDDischargeAccident(xVN: string): Promise<any>;
    getOPDDischargeOrderItem(xVN: string): Promise<any>;
    getOPDDischargeBilling(xVN: string): Promise<any>;
    getOPDCheckBalance(xVN: string): Promise<any>;
    checkVisitNumberAvailable(xHN: string, xVN: string): Promise<any>;
    getOPDDischargePatient(xHN: string): Promise<any>;
    getListVisitClaimAIA(xVN: string): Promise<any>;
    getIPDVisit(xVN: string): Promise<any>;
    getIPDVisitIsDischarge(xVN: string): Promise<any>;
    getIPDVitalSign(xVN: string): Promise<any>;
    getIPDDoctor(xVN: string): Promise<any>;
    getIPDDiagnosis(xVN: string): Promise<any>;
    getIPDInvestigation(xVN: string): Promise<any>;
    getIPDOrderItem(xVN: string): Promise<any>;
    getIPDBilling(xVN: string): Promise<any>;
    getIPDProcedure(xVN: string): Promise<any>;
    getIPDAccident(xVN: string): Promise<any>;
    getListBilling(xHN: string): Promise<any>;
    getPreAuthBilling(xVN: string): Promise<any>;
    getICDDx(xICDDxCode: string): Promise<any>;
    getICD9(xICD9Code: string): Promise<any>;
    getBillingSubgroup(xBillingCode: string): Promise<any>;
    cleanSpecialCharacters(text: string): string;
}
