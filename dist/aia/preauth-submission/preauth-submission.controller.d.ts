import { PreauthSubmissionService } from './preauth-submission.service';
import { QueryDiagnosisDto } from './dto/query-diagnoisis-preauth-submission.dto';
import { QueryPreAuthNoteDto } from './dto/query-preauthnote-preauth-submission.dto';
import { QueryPreBillingDto, DeletePreBillingDto } from './dto/query-prebilling-preauth-submission.dto';
import { QuerySubmitPreAuthDto } from './dto/query-submit-preauth-submission.dto';
import { QueryAccidentDto } from './dto/query-accident-preauth-submission.dto';
import { QueryProcedureDto } from './dto/query-procedure-preauth-submission.dto';
import { QueryPreauthSubmissionDto } from './dto/query-preauth-submission.dto';
import { QueryUpdateReferenceVNBodyDto } from './dto/query-updatereferencevn-preauth-submission.dto';
import { QueryPackageBundleDto } from './dto/query-packagebundle-preauth-submission.dto';
import { QueryUpdateIsAdmissionBodyDto } from './dto/query-updateisadmission-preauth-submission.dto';
export declare class PreauthSubmissionController {
    private readonly preauthSubmissionService;
    constructor(preauthSubmissionService: PreauthSubmissionService);
    getListVisitClaimAIA(queryPreauthSubmissionDto: QueryPreauthSubmissionDto): Promise<import("./dto/result-listclaim-preauth-submission.dto").ResultClaimFormListDto>;
    getPreAuthVisit(queryPreauthSubmissionDto: QueryPreauthSubmissionDto): Promise<import("./dto/result-visit-preauth-submission.dto").ResultPreAuthVisitDto>;
    getPreAuthDoctor(queryPreauthSubmissionDto: QueryPreauthSubmissionDto): Promise<import("./dto/result-doctor-preauth-submission.dto").ResultPreAuthDoctorDto>;
    getPreAuthDiagnosis(queryPreauthSubmissionDto: QueryPreauthSubmissionDto): Promise<import("./dto/result-diagnosis-preauth-submission.dto").ResultPreAuthDiagnosisDto>;
    getPreAuthProcedure(queryPreauthSubmissionDto: QueryPreauthSubmissionDto): Promise<import("./dto/result-procedure-preauth-submission.dto").ResultPreAuthProcedurDto>;
    getListBilling(xHN: string): Promise<import("./dto/result-ListBilling.dto").ResultlistBillingDto>;
    setPreBilling(queryPreBillingDto: QueryPreBillingDto): Promise<import("./dto/query-prebilling-preauth-submission.dto").ResultSubmitPreBillingDto>;
    getPreBilling(queryPreauthSubmissionDto: QueryPreauthSubmissionDto): Promise<import("./dto/result-billing-preauth-submission.dto").ResultPreAuthBillingDto>;
    SubmitPreBilling(queryPreBillingDto: QueryPreBillingDto): Promise<import("./dto/query-prebilling-preauth-submission.dto").ResultSubmitPreBillingDto>;
    previewPreBilling(QueryPreBillingDto: QueryPreBillingDto): Promise<import("./dto/query-prebilling-preauth-submission.dto").ResultSubmitPreBillingDto>;
    InsertPreBilling(queryPreBillingDto: QueryPreBillingDto): Promise<import("./dto/query-prebilling-preauth-submission.dto").ResultSubmitPreBillingDto>;
    deletePreBillingById(deletePreBillingDto: DeletePreBillingDto): Promise<import("./dto/query-prebilling-preauth-submission.dto").ResultSubmitPreBillingDto>;
    deletePreBillingByRefId(deletePreBillingDto: DeletePreBillingDto): Promise<import("./dto/query-prebilling-preauth-submission.dto").ResultSubmitPreBillingDto>;
    getPreAuthAccident(queryPreauthSubmissionDto: QueryPreauthSubmissionDto): Promise<import("./dto/result-accident-preauth-submission.dto").ResultPreAuthAccidentDto>;
    getPreAuthNote(querySubmitPreAuthDto: QuerySubmitPreAuthDto): Promise<import("./dto/result-authnote-preauth-submissiondto").ResultAuthNoteDto>;
    getPackageBundle(queryPackageBundleDto: QueryPackageBundleDto): Promise<import("./dto/result-packagebundle-preauth-submission.dto").ResultPackageBundleDto>;
    SubmitPreAuthVisit(querySubmitPreAuthDto: QuerySubmitPreAuthDto): Promise<import("./dto/query-visit-preauth-submissiondto").ResultSubmitIPDVisitDto>;
    SubmitDiagnosis(queryDiagnosisDto: QueryDiagnosisDto): Promise<import("./dto/query-diagnoisis-preauth-submission.dto").ResultSubmitDiagnosisDto>;
    ReloadDiagnosis(queryDiagnosisDto: QueryDiagnosisDto): Promise<import("./dto/query-diagnoisis-preauth-submission.dto").ResultSubmitDiagnosisDto>;
    SubmitProcedure(queryProcedureDto: QueryProcedureDto): Promise<import("./dto/query-procedure-preauth-submission.dto").ResultSubmitProcedureDto>;
    SubmitAccident(queryAccidentDto: QueryAccidentDto): Promise<import("./dto/query-accident-preauth-submission.dto").ResultSubmitAccidentDto>;
    SubmitPreAuthNote(queryPreAuthNoteDto: QueryPreAuthNoteDto): Promise<import("./dto/query-preauthnote-preauth-submission.dto").ResultSubmitPreAuthNoteDto>;
    UpdateReferenceVN(queryUpdateReferenceVNBodyDto: QueryUpdateReferenceVNBodyDto): Promise<import("./dto/query-updatereferencevn-preauth-submission.dto").ResultSubmitUpdateReferenceVNDto>;
    UpdateIsAdmission(queryUpdateIsAdmissionBodyDto: QueryUpdateIsAdmissionBodyDto): Promise<import("./dto/query-updateisadmission-preauth-submission.dto").ResultSubmitUpdateIsAdmissionDto>;
    SubmitPreSubmissionToAIA(querySubmitPreAuthDto: QuerySubmitPreAuthDto): Promise<import("./dto/result-submit-preauth-submission.dto").ResultSubmitPreAuthSubmissionDto>;
    checkeligiblePreAdmission(queryPreauthSubmissionDto: QueryPreauthSubmissionDto): Promise<import("./dto/result-check-eligible-preadmission.dto").ResultCheckeligiblePreAdmissionDto>;
    ReviewPreAuth(queryPreauthSubmissionDto: QueryPreauthSubmissionDto): Promise<import("./dto/review-preauth-submission.dto").ResultReviewOpdDischargeDto>;
    getICDDx(xICDDxCode: string): Promise<import("./dto/result-ICDDx.dto").ResultlistICDDxInfoDto>;
    getICD9(xICD9Code: string): Promise<import("./dto/result-ICD9.dto").ResultlistICD9InfoDto>;
    getBillingSubgroup(xBillingCode: string): Promise<import("./dto/result-BillingSub.dto").ResultBillingSubInfoDto>;
}
